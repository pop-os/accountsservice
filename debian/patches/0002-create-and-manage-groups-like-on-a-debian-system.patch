From: Frederic Peters <fpeters@debian.org>
Date: Sat, 12 Oct 2019 10:29:08 +0200
Subject: [PATCH] Create and manage groups like on a debian system.

Reworked by Philip Withnall <withnall@endlessm.com> to support the new
`-Dextra_admin_groups` option.

Bug-Debian: http://bugs.debian.org/618764
Forwarded: not-needed

Description: Create and manage groups like on a debian system.
---
 src/daemon.c | 60 +++++++++++++++++++++++++++++++++++++++++-------------------
 1 file changed, 41 insertions(+), 19 deletions(-)

diff --git a/src/daemon.c b/src/daemon.c
index c52bda3..c6074b2 100644
--- a/src/daemon.c
+++ b/src/daemon.c
@@ -1086,6 +1086,22 @@ create_data_free (gpointer data)
         g_free (cd);
 }
 
+static gboolean
+add_user_to_group (GDBusMethodInvocation *context,
+                   const char *user_name,
+                   const char *group_name,
+                   GError **error)
+{
+        const gchar *argv[4];
+
+        argv[0] = "/usr/sbin/adduser";
+        argv[1] = user_name;
+        argv[2] = group_name;
+        argv[3] = NULL;
+
+        return spawn_with_login_uid (context, argv, error);
+}
+
 static void
 daemon_create_user_authorized_cb (Daemon                *daemon,
                                   User                  *dummy,
@@ -1106,25 +1122,12 @@ daemon_create_user_authorized_cb (Daemon                *daemon,
 
         sys_log (context, "create user '%s'", cd->user_name);
 
-        argv[0] = "/usr/sbin/useradd";
-        argv[1] = "-m";
-        argv[2] = "-c";
-        argv[3] = cd->real_name;
-        if (cd->account_type == ACCOUNT_TYPE_ADMINISTRATOR) {
-                if (EXTRA_ADMIN_GROUPS != NULL && EXTRA_ADMIN_GROUPS[0] != '\0')
-                        admin_groups = g_strconcat (ADMIN_GROUP, ",",
-                                                    EXTRA_ADMIN_GROUPS, NULL);
-                else
-                        admin_groups = g_strdup (ADMIN_GROUP);
-
-                argv[4] = "-G";
-                argv[5] = admin_groups;
-                argv[6] = "--";
-                argv[7] = cd->user_name;
-                argv[8] = NULL;
-        }
-        else if (cd->account_type == ACCOUNT_TYPE_STANDARD) {
-                argv[4] = "--";
+        if (cd->account_type == ACCOUNT_TYPE_ADMINISTRATOR || cd->account_type == ACCOUNT_TYPE_STANDARD) {
+                argv[0] = "/usr/sbin/adduser";
+                argv[1] = "--quiet";
+                argv[2] = "--disabled-login";
+                argv[3] = "--gecos";
+                argv[4] = cd->real_name;
                 argv[5] = cd->user_name;
                 argv[6] = NULL;
         }
@@ -1138,6 +1141,25 @@ daemon_create_user_authorized_cb (Daemon                *daemon,
                 return;
         }
 
+        if (cd->account_type == ACCOUNT_TYPE_ADMINISTRATOR) {
+                g_auto(GStrv) extra_admin_groups = NULL;
+
+                if (!add_user_to_group (context, cd->user_name, ADMIN_GROUP, &error)) {
+                        throw_error (context, ERROR_FAILED, "failed to add user %s to group %s: %s",
+                                     cd->user_name, ADMIN_GROUP, error->message);
+                        return;
+                }
+
+                extra_admin_groups = g_strsplit (EXTRA_ADMIN_GROUPS ? EXTRA_ADMIN_GROUPS : "", ",", -1);
+                for (gsize i = 0; extra_admin_groups[i] != NULL; i++) {
+                        if (!add_user_to_group (context, cd->user_name, extra_admin_groups[i], &error)) {
+                                throw_error (context, ERROR_FAILED, "failed to add user %s to group %s: %s",
+                                             cd->user_name, extra_admin_groups[i], error->message);
+                                return;
+                        }
+                }
+        }
+
         user = daemon_local_find_user_by_name (daemon, cd->user_name);
         user_update_local_account_property (user, TRUE);
         user_update_system_account_property (user, FALSE);
