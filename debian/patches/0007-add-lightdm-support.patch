From: Michael Terry <michael.terry@canonical.com>
Date: Thu, 21 Dec 2017 15:08:44 +1300
Subject: [PATCH 04/12] Support setting/reading LightDM autologin setings

---
 src/daemon.c | 127 ++++++++++++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 117 insertions(+), 10 deletions(-)

diff --git a/src/daemon.c b/src/daemon.c
index 4a2537c..c6b5fc4 100644
--- a/src/daemon.c
+++ b/src/daemon.c
@@ -1465,11 +1465,11 @@ daemon_local_check_auth (Daemon                *daemon,
         g_object_unref (subject);
 }
 
-gboolean
-load_autologin (Daemon      *daemon,
-                gchar      **name,
-                gboolean    *enabled,
-                GError     **error)
+static gboolean
+load_autologin_gdm (Daemon      *daemon,
+                    gchar      **name,
+                    gboolean    *enabled,
+                    GError     **error)
 {
         g_autoptr(GKeyFile) keyfile = NULL;
         GError *local_error = NULL;
@@ -1505,21 +1505,81 @@ load_autologin (Daemon      *daemon,
 }
 
 static gboolean
-save_autologin (Daemon      *daemon,
-                const gchar *name,
-                gboolean     enabled,
+load_autologin_lightdm (Daemon      *daemon,
+                        gchar      **name,
+                        gboolean    *enabled,
+                        GError     **error)
+{
+        g_autoptr(GKeyFile) keyfile = NULL;
+        const gchar *filename;
+
+        filename = "/etc/lightdm/lightdm.conf";
+
+        keyfile = g_key_file_new ();
+        if (!g_key_file_load_from_file (keyfile,
+                                        filename,
+                                        G_KEY_FILE_KEEP_COMMENTS,
+                                        error)) {
+                return FALSE;
+        }
+
+        *name = g_key_file_get_string (keyfile, "SeatDefaults", "autologin-user", error);
+        *enabled = (*error == NULL && (*name) && (*name)[0] != 0);
+
+        return (*error == NULL);
+}
+
+gboolean
+load_autologin (Daemon      *daemon,
+                gchar      **name,
+                gboolean    *enabled,
                 GError     **error)
+{
+        g_autoptr(GDBusProxy) proxy = NULL;
+
+        /* First, determine whether we should load GDM or LightDM values by
+           checking if GDM is running. */
+        proxy = g_dbus_proxy_new_for_bus_sync (G_BUS_TYPE_SYSTEM,
+                                               G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES|
+                                               G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS|
+                                               G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START,
+                                               NULL,
+                                               "org.gnome.DisplayManager",
+                                               "/org/gnome/DisplayManager/Manager",
+                                               "org.gnome.DisplayManager.Manager",
+                                               NULL,  /* GCancellable */
+                                               NULL); /* GError */
+
+        if (proxy != NULL)
+                return load_autologin_gdm (daemon, name, enabled, error);
+        else
+                return load_autologin_lightdm (daemon, name, enabled, error);
+}
+
+static gboolean
+save_autologin_gdm (Daemon      *daemon,
+                    const gchar *name,
+                    gboolean     enabled,
+                    GError     **error)
 {
         g_autoptr(GKeyFile) keyfile = NULL;
         g_autofree gchar *data = NULL;
         gboolean result;
+        g_autoptr(GError) local_error = NULL;
+
+        if (!g_file_test ("/etc/gdm3", G_FILE_TEST_EXISTS))
+                return TRUE; /* not an error, just not installed */
 
         keyfile = g_key_file_new ();
         if (!g_key_file_load_from_file (keyfile,
                                         PATH_GDM_CUSTOM,
                                         G_KEY_FILE_KEEP_COMMENTS,
-                                        error)) {
-                return FALSE;
+                                        &local_error)) {
+                /* It's OK for custom.conf to not exist, we will make it */
+                if (!g_error_matches (local_error, G_FILE_ERROR, G_FILE_ERROR_NOENT)) {
+                        g_propagate_error (error, g_steal_pointer (&local_error));
+                        return FALSE;
+                }
         }
 
         g_key_file_set_string (keyfile, "daemon", "AutomaticLoginEnable", enabled ? "True" : "False");
@@ -1531,6 +1591,53 @@ save_autologin (Daemon      *daemon,
         return result;
 }
 
+static gboolean
+save_autologin_lightdm (Daemon      *daemon,
+                        const gchar *name,
+                        gboolean     enabled,
+                        GError     **error)
+{
+        g_autoptr(GKeyFile) keyfile = NULL;
+        const gchar *filename;
+        g_autofree gchar *data = NULL;
+        g_autoptr(GError) local_error = NULL;
+
+        if (!g_file_test ("/etc/lightdm", G_FILE_TEST_EXISTS))
+                return TRUE; /* not an error, just not installed */
+
+        filename = "/etc/lightdm/lightdm.conf";
+
+        keyfile = g_key_file_new ();
+        if (!g_key_file_load_from_file (keyfile,
+                                        filename,
+                                        G_KEY_FILE_KEEP_COMMENTS,
+                                        &local_error)) {
+                /* It's OK for custom.conf to not exist, we will make it */
+                if (!g_error_matches (local_error, G_FILE_ERROR, G_FILE_ERROR_NOENT)) {
+                        g_propagate_error (error, g_steal_pointer (&local_error));
+                        return FALSE;
+                }
+        }
+
+        g_key_file_set_string (keyfile, "SeatDefaults", "autologin-user", enabled ? name : "");
+
+        data = g_key_file_to_data (keyfile, NULL, NULL);
+        return g_file_set_contents (filename, data, -1, error);
+}
+
+static gboolean
+save_autologin (Daemon      *daemon,
+                const gchar *name,
+                gboolean     enabled,
+                GError     **error)
+{
+        if (!save_autologin_gdm (daemon, name, enabled, error))
+                return FALSE;
+        if (!save_autologin_lightdm (daemon, name, enabled, error))
+                return FALSE;
+        return TRUE;
+}
+
 gboolean
 daemon_local_set_automatic_login (Daemon    *daemon,
                                   User      *user,
